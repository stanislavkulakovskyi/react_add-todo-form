{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","href","className","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","getUserByName","usersFromServer","find","userId","App","useState","errorUser","setErrorUser","errorTitle","setErrorTitle","visibleTodos","setVisibleTodos","values","setValues","setTodo","handleChange","event","target","value","useEffect","addUser","length","action","method","onSubmit","preventDefault","Boolean","trim","type","onChange","placeholder","disabled","userFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d91368f9.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a href={`mailto:${email}`} className=\"UserInfo\">\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const { title, completed, user } = todo;\n\n  return (\n    <li\n      data-id={todo.id}\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && <UserInfo user={user} />}\n    </li>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <ul className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </ul>\n);\n","import React, { useState, useEffect, ChangeEvent } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nconst getUserById = (userId: number) => {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n};\n\nconst getUserByName = (username: string) => {\n  const foundUser = usersFromServer.find(user => user.name === username);\n\n  return foundUser || null;\n};\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [errorUser, setErrorUser] = useState(false);\n  const [errorTitle, setErrorTitle] = useState(false);\n  const [visibleTodos, setVisibleTodos] = useState(todos);\n\n  const [values, setValues] = useState({\n    user: '',\n    title: '',\n    id: 16,\n    completed: false,\n  });\n\n  const [todo, setTodo] = useState<Todo>({\n    id: 0,\n    userId: 0,\n    title: '',\n    completed: false,\n    user: null,\n  });\n\n  const {\n    user,\n    title,\n    id,\n    completed,\n  } = values;\n\n  const handleChange = (\n    event: ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    const { name, value } = event.target;\n\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  };\n\n  useEffect(() => {\n    const addUser = getUserByName(user);\n\n    if (user.length > 0) {\n      setErrorUser(false);\n    }\n\n    if (title.length > 0) {\n      setErrorTitle(false);\n    }\n\n    setTodo({\n      ...todo,\n      id,\n      userId: addUser !== null ? addUser.id : 0,\n      title,\n      completed,\n      user: getUserByName(user),\n    });\n  }, [title, user]);\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!user || !title) {\n      setErrorUser(Boolean(!user));\n      setErrorTitle(Boolean(!title));\n\n      return;\n    }\n\n    if (user === '0') {\n      setErrorUser(true);\n\n      return;\n    }\n\n    if (title.trim().length === 0) {\n      setErrorTitle(Boolean(title));\n\n      return;\n    }\n\n    setValues({\n      ...values,\n      user: '',\n      title: '',\n      id: id + 1,\n    });\n\n    setVisibleTodos([\n      ...visibleTodos,\n      todo,\n    ]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            Title:\n            {' '}\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              name=\"title\"\n              value={values.title}\n              onChange={handleChange}\n              placeholder=\"Please enter a title\"\n            />\n          </label>\n          {errorTitle && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:\n            {' '}\n            <select\n              name=\"user\"\n              data-cy=\"userSelect\"\n              value={values.user || '0'}\n              onChange={handleChange}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map(userFromServer => (\n                <option\n                  value={userFromServer.name}\n                  key={userFromServer.id}\n                >\n                  {userFromServer.name}\n                </option>\n              ))}\n            </select>\n          </label>\n          {errorUser && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}